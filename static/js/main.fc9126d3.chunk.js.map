{"version":3,"sources":["TableOfContent.js","App.js","reportWebVitals.js","index.js"],"names":["Headings","headings","activeId","setActiveId","map","heading","className","id","href","onClick","e","preventDefault","title","items","length","child","getNestedHeadings","headingElements","nestedHeadings","counters","h1","h2","h3","forEach","index","innerText","nodeName","push","TableOfContents","React","useState","setNestedHeadings","useEffect","Array","from","document","querySelectorAll","newNestedHeadings","useHeadingsData","element","addEventListener","event","target","useIntersectionObserver","newActiveId","oldelement","getElementById","style","color","aria-label","scrollIntoView","behavior","Form","JSONSchemaForm","Handlebars","registerHelper","eq","v1","v2","ne","lt","gt","lte","gte","and","prototype","every","call","arguments","Boolean","or","slice","some","ExternalLink","children","rest","rel","alt","App","mode","setMode","showLogin","setShowLogin","paramsSchema","setParamsSchema","markdownParams","setMarkdownParams","token","setToken","undefined","markdownError","setMarkdownError","markdownUrl","setMarkdownUrl","markdownTemplate","setMarkdownTemplate","renderedMarkdown","setRenderedMarkdown","loadData","a","urlParams","URLSearchParams","window","location","search","get","gistUrl","contentUrl","startsWith","split","join","headers","Accept","Authorization","fetch","then","response","status","text","markdownContent","mutacheParams","parse","mustacheParamsNames","body","filter","k","type","flatMap","path","parts","schema","properties","options","paramName","fromUrlValue","default","endsWith","format","gistId","json","gist","html_url","checklist","files","fileName","Object","keys","find","name","params","content","JSON","stringify","setTimeout","hash","querySelector","ignore","template","compile","error","message","display","flexDirection","onChange","paddingRight","value","print","marginLeft","liveValidate","formData","url","URL","queryParams","searchParams","property","set","history","replaceState","toString","TableOfContent","paddingLeft","cols","rows","width","margin","remarkPlugins","slug","gfm","emoji","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fc9126d3.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Headings = ({ headings, activeId, setActiveId }) => (\n  <ul>\n    {headings.map((heading) => (\n      <li key={heading.id} className={heading.id === activeId ? \"active\" : \"\"}>\n        <a\n          href={`#${heading.id}`}\n          onClick={(e) => {\n            e.preventDefault();\n            setActiveId(heading.id);\n          }}\n        >\n          {heading.title}\n        </a>\n        {heading.items.length > 0 && (\n          <ul>\n            {heading.items.map((child) => (\n              <li\n                key={child.id}\n                className={child.id === activeId ? \"active\" : \"\"}\n              >\n                <a\n                  href={`#${child.id}`}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    setActiveId(child.id);\n                  }}\n                >\n                  {child.title}\n                </a>\n              </li>\n            ))}\n          </ul>\n        )}\n      </li>\n    ))}\n  </ul>\n);\n\n/**\n * Dynamically generates the table of contents list, using any H2s and H3s it can find in the main text\n */\nconst useHeadingsData = () => {\n  const [nestedHeadings, setNestedHeadings] = React.useState([]);\n\n  React.useEffect(() => {\n    const headingElements = Array.from(\n      document.querySelectorAll(\"body h1, body h2, body h3\")\n    );\n\n    // Created a list of headings, with H3s nested\n    const newNestedHeadings = getNestedHeadings(headingElements);\n    setNestedHeadings(newNestedHeadings);\n  }, []);\n\n  return { nestedHeadings };\n};\n\nconst getNestedHeadings = (headingElements) => {\n  const nestedHeadings = [];\n\n  const counters = { h1: 0, h2: 0, h3: 0 };\n\n  headingElements.forEach((heading, index) => {\n    const { innerText: title, id } = heading;\n\n    if (heading.nodeName === \"H1\") {\n      counters.h1 = counters.h1 + 1;\n      counters.h2 = 0;\n      counters.h3 = 0;\n      nestedHeadings.push({\n        id,\n        title: counters.h1 + \". \" + title,\n        items: [],\n      });\n    }\n\n    if (heading.nodeName === \"H2\" && nestedHeadings.length > 0) {\n      counters.h2 = counters.h2 + 1;\n      counters.h3 = 0;\n\n      nestedHeadings[nestedHeadings.length - 1].items.push({\n        id,\n        title: counters.h1 + \".\" + counters.h2 + \" \" + title,\n      });\n    }\n\n    if (heading.nodeName === \"H3\" && nestedHeadings.length > 0) {\n      counters.h3 = counters.h3 + 1;\n      nestedHeadings[nestedHeadings.length - 1].items.push({\n        id,\n        title:\n          counters.h1 + \".\" + counters.h2 + \".\" + counters.h3 + \" \" + title,\n      });\n    }\n  });\n\n  return nestedHeadings;\n};\n\nconst useIntersectionObserver = (setActiveId) => {\n  React.useEffect(() => {\n    const headingElements = Array.from(document.querySelectorAll(\"h1, h2, h3\"));\n\n    headingElements.forEach((element) => {\n      element.addEventListener(\n        \"mouseover\",\n        function (event) {\n          setActiveId(event.target.id);\n        },\n        false\n      );\n    });\n  }, [setActiveId]);\n};\n\n/**\n * Renders the table of contents.\n */\nconst TableOfContents = () => {\n  const [activeId, setActiveId] = React.useState();\n  const { nestedHeadings } = useHeadingsData();\n  const setSmarterActiveIdWithScroll = (newActiveId) => {\n    const oldelement = document.getElementById(activeId);\n    if (oldelement) {\n      oldelement.style.color = \"\";\n      debugger;\n    }\n    const element = document.getElementById(newActiveId);\n    element.style.color = \"orange\";\n    element.scrollIntoView({\n      behavior: \"smooth\",\n    });\n    setActiveId(newActiveId);\n  };\n\n  const setSmarterActiveId = (newActiveId) => {\n    const oldelement = document.getElementById(activeId);\n    if (oldelement) {\n      oldelement.style.color = \"\";\n    }\n    const element = document.getElementById(newActiveId);\n    if (element) {\n      element.style.color = \"orange\";\n    }\n    setActiveId(newActiveId);\n  };\n  useIntersectionObserver(setSmarterActiveId);\n\n  return (\n    <nav aria-label=\"Table of contents\">\n      <Headings\n        headings={nestedHeadings}\n        activeId={activeId}\n        setActiveId={setSmarterActiveIdWithScroll}\n      />\n    </nav>\n  );\n};\n\nexport default TableOfContents;\n","import \"./App.css\";\nimport Handlebars from \"handlebars\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\nimport emoji from \"remark-emoji\";\nimport slug from \"remark-slug\";\nimport headings from \"remark-autolink-headings\";\n\nimport { Fragment, useEffect, useState } from \"react\";\nimport JSONSchemaForm from \"@rjsf/core\";\nimport TableOfContents from \"./TableOfContent\";\nconst Form = JSONSchemaForm;\n\nHandlebars.registerHelper({\n  eq: (v1, v2) => v1 === v2,\n  ne: (v1, v2) => v1 !== v2,\n  lt: (v1, v2) => v1 < v2,\n  gt: (v1, v2) => v1 > v2,\n  lte: (v1, v2) => v1 <= v2,\n  gte: (v1, v2) => v1 >= v2,\n  and() {\n    return Array.prototype.every.call(arguments, Boolean);\n  },\n  or() {\n    return Array.prototype.slice.call(arguments, 0, -1).some(Boolean);\n  },\n});\n\nconst ExternalLink = ({ href, children, ...rest }) => (\n  <a\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n    href={href}\n    alt={\"external link\"}\n    {...rest}\n  >\n    {children ?? href}\n  </a>\n);\n\nfunction App() {\n  const [mode, setMode] = useState(\"r\");\n  const [showLogin, setShowLogin] = useState(false);\n  const [paramsSchema, setParamsSchema] = useState();\n  const [markdownParams, setMarkdownParams] = useState({});\n  \n  const [token, setToken] = useState();\n\n  const [markdownError, setMarkdownError] = useState(undefined);\n  const [markdownUrl, setMarkdownUrl] = useState(undefined);\n  const [markdownTemplate, setMarkdownTemplate] = useState(\"{{demo}}\");\n  const [renderedMarkdown, setRenderedMarkdown] = useState(\"\");\n\n  const loadData = async () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const markdownUrl = urlParams.get(\"markdown\");\n    const gistUrl =\n      urlParams.get(\"gist\") ||\n      \"https://gist.github.com/mestachs/e1819a776ca1618b981d1de082a550aa\";\n\n    setMode(urlParams.get(\"mode\") || \"r\");\n\n    if (markdownUrl) {\n      let contentUrl = markdownUrl;\n      if (markdownUrl.startsWith(\"https://github.com/\")) {\n        contentUrl =\n          \"https://raw.githubusercontent.com/\" +\n          markdownUrl.split(\"/\").slice(3, 5).join(\"/\") +\n          \"/\" +\n          markdownUrl.split(\"/\").slice(6).join(\"/\");\n      }\n\n      let headers = {};\n      if (token) {\n        headers = {\n          Accept: \"application/vnd.github.v3.raw\",\n          Authorization: `token ${token}`,\n        };\n        contentUrl =\n          \"https://api.github.com/repos/\" +\n          markdownUrl.split(\"/\").slice(3, 5).join(\"/\") +\n          \"/contents/\" +\n          markdownUrl.split(\"/\").slice(7).join(\"/\");\n      }\n      setMarkdownUrl(markdownUrl);\n\n      const markdownContent = await fetch(contentUrl, {\n        headers: headers,\n      }).then((response) => {\n        if (response.status == 404) {\n          setShowLogin(true)\n        }\n        return response.text();\n      });\n      setMarkdownTemplate(markdownContent);\n\n      const mutacheParams = Handlebars.parse(markdownContent);\n\n      const mustacheParamsNames = mutacheParams.body\n        .filter((k) => k.type == \"MustacheStatement\")\n        .flatMap((k) => k.path.parts);\n\n      const schema = {\n        type: \"object\",\n        properties: {},\n      };\n\n      const options = {};\n      for (let paramName of mustacheParamsNames) {\n        let fromUrlValue = urlParams.get(\"params.\" + paramName);\n        if (fromUrlValue) {\n          if (fromUrlValue && fromUrlValue == \"false\") {\n            fromUrlValue = false;\n          }\n          if (fromUrlValue && fromUrlValue == \"true\") {\n            fromUrlValue = true;\n          }\n          options[paramName] = fromUrlValue;\n        } else {\n          options[paramName] = \"exampleValuefor\" + paramName;\n        }\n        schema.properties[paramName] = {\n          type: \"string\",\n          default: fromUrlValue,\n        };\n        if (paramName.endsWith(\"Url\")) {\n          schema.properties[paramName].format = \"uri\";\n        }\n      }\n\n      setParamsSchema(schema);\n\n      setMarkdownParams(options);\n    } else if (gistUrl) {\n      let gistId = gistUrl;\n      if (\n        gistUrl.startsWith(\"https://gist.github.com\") ||\n        gistUrl.startsWith(\"https://gist.githubusercontent.com\")\n      ) {\n        gistId = gistUrl.split(\"/\")[4];\n      }\n\n      const gist = await fetch(`https://api.github.com/gists/${gistId}`).then(\n        (response) => response.json()\n      );\n      setMarkdownUrl(gist.html_url);\n\n      let checklist = gist.files[\"tasklist.md\"] || gist.files[\"checklist.md\"];\n\n      if (checklist == undefined) {\n        const fileName = Object.keys(gist.files).find((name) =>\n          name.endsWith(\".md\")\n        );\n        checklist = gist.files[fileName];\n      }\n\n      let params = gist.files[\"params.json\"];\n\n      if (params == undefined) {\n        const mutacheParams = Handlebars.parse(checklist.content);\n\n        const mustacheParamsNames = mutacheParams.body\n          .filter((k) => k.type == \"MustacheStatement\")\n          .flatMap((k) => k.path.parts);\n\n        const schema = {\n          type: \"object\",\n          properties: {},\n        };\n\n        const options = {};\n        for (let paramName of mustacheParamsNames) {\n          let fromUrlValue = urlParams.get(\"params.\" + paramName);\n          if (fromUrlValue) {\n            if (fromUrlValue && fromUrlValue == \"false\") {\n              fromUrlValue = false;\n            }\n            if (fromUrlValue && fromUrlValue == \"true\") {\n              fromUrlValue = true;\n            }\n            options[paramName] = fromUrlValue;\n          } else {\n            options[paramName] = \"exampleValuefor\" + paramName;\n          }\n          schema.properties[paramName] = {\n            type: \"string\",\n            default: fromUrlValue,\n          };\n          if (paramName.endsWith(\"Url\")) {\n            schema.properties[paramName].format = \"uri\";\n          }\n        }\n\n        setParamsSchema(schema);\n\n        params = {\n          content: JSON.stringify(options),\n        };\n      }\n\n      if (params) {\n        setMarkdownParams(JSON.parse(params.content));\n      }\n      setMarkdownTemplate(checklist.content);\n      setTimeout(() => {\n        var hash = window.location.hash;\n        if (hash) {\n          try {\n            var element = document.querySelector(hash);\n            if (element) {\n              element.scrollIntoView();\n            }\n          } catch (ignore) {}\n        }\n      }, 1000);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n  useEffect(() => {\n    try {\n      const template = Handlebars.compile(markdownTemplate);\n      setRenderedMarkdown(template(markdownParams));\n      setMarkdownError(\"\");\n    } catch (error) {\n      setMarkdownError(error.message);\n    }\n  }, [markdownTemplate, JSON.stringify(markdownParams), markdownParams]);\n\n  return (\n    <div className=\"App\">\n      <div id=\"edit\" className=\"main\">\n        <div\n          style={\n            mode == \"rw\" ? { display: \"flex\", flexDirection: \"column\" } : {}\n          }\n        >\n          <div className=\"noprint login\">\n          Accessing a private repo ?<input type=\"checkbox\" onChange={e => setShowLogin(!showLogin)}></input>\n                  <br></br>\n            {showLogin && (\n              <div>\n                <p>\n                  {\"\"}\n                  <br></br>\n                  <ExternalLink\n                    href=\"https://github.com/settings/tokens\"\n                    style={{ paddingRight: \"10px\" }}\n                  >\n                    [_] Generate a github token <br></br>\n                    [_] Limit the scope to repo and/or gist <br></br>\n                    [_] Paste it with 1password<br></br>\n                    [_] Then hit the reload button<br></br>\n                  </ExternalLink>\n                </p>\n                <br></br>\n                <label>\n                  Token:{\" \"}\n                  <input\n                    type=\"password\"\n                    onChange={(e) => {\n                      setToken(e.target.value);\n                    }}\n                  />\n                </label>\n             \n                <button onClick={loadData}>Reload</button>\n              </div>\n            )}\n            <p className=\"noprint\">\n              <button onClick={() => window.print()}>Print</button>\n              <button\n                style={{ marginLeft: \"20px\" }}\n                onClick={() => setMode(mode == \"rw\" ? \"r\" : \"rw\")}\n              >\n                Toggle to {mode == \"rw\" ? \"r\" : \"rw\"}\n              </button>\n            </p>\n          </div>\n          {paramsSchema && (\n            <Form\n              schema={paramsSchema}\n              liveValidate={true}\n              formData={markdownParams}\n              onChange={(e) => {\n                const url = new URL(window.location);\n\n                const queryParams = url.searchParams;\n\n                for (let property of Object.keys(e.formData)) {\n                  queryParams.set(\"params.\" + property, e.formData[property]);\n                }\n\n                window.history.replaceState({}, \"\", url.toString());\n\n                setMarkdownParams(e.formData);\n              }}\n            >\n              <Fragment />\n            </Form>\n          )}\n          <TableOfContents key={renderedMarkdown} />\n        </div>\n        {mode == \"rw\" && (\n          <div className=\"noprint\">\n            <div style={{ paddingLeft: \"40px\" }}>\n              <p>\n                <b>Markdown template</b>{\" \"}\n                {markdownUrl && (\n                  <ExternalLink href={markdownUrl}>source</ExternalLink>\n                )}\n                <span style={{ color: \"red\" }}>{markdownError}</span>\n              </p>\n              <textarea\n                value={markdownTemplate}\n                onChange={(event) => {\n                  setMarkdownTemplate(event.target.value);\n                }}\n                cols=\"80\"\n                rows=\"50\"\n              ></textarea>\n            </div>\n          </div>\n        )}\n        <div\n          style={{\n            paddingLeft: \"20px\",\n            marginLeft: \"20px\",\n            width: mode == \"r\" ? \"80%\" : \"\",\n            margin: mode == \"r\" ? \"auto\" : \"\",\n          }}\n        >\n          <div className={\"checklist \" + mode}>\n            <p>\n              Source :{\" \"}\n              <ExternalLink href={markdownUrl}>{markdownUrl}</ExternalLink>\n            </p>\n            <ReactMarkdown\n              remarkPlugins={[slug, headings, gfm, emoji]}\n              children={renderedMarkdown}\n            />\n          </div>\n        </div>\n      </div>\n      {mode == \"rw\" && (\n        <div className=\"noprint\">\n          <p>\n            <b>\n              Instantiated markdown, create a{\" \"}\n              <ExternalLink\n                href=\"https://gist.github.com/\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                gist\n              </ExternalLink>{\" \"}\n              and start the procedure\n            </b>\n          </p>\n          <textarea value={renderedMarkdown} cols=\"200\" rows=\"50\"></textarea>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}