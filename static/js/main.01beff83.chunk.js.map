{"version":3,"sources":["TableOfContent.js","App.js","reportWebVitals.js","index.js"],"names":["Headings","headings","activeId","setActiveId","map","heading","className","id","href","onClick","e","preventDefault","title","items","length","child","getNestedHeadings","headingElements","nestedHeadings","counters","h1","h2","h3","forEach","index","innerText","nodeName","push","TableOfContents","React","useState","setNestedHeadings","useEffect","Array","from","document","querySelectorAll","newNestedHeadings","useHeadingsData","useRef","element","addEventListener","event","target","useIntersectionObserver","newActiveId","oldelement","getElementById","style","color","aria-label","scrollIntoView","behavior","Form","JSONSchemaForm","Handlebars","registerHelper","eq","v1","v2","ne","lt","gt","lte","gte","and","prototype","every","call","arguments","Boolean","or","slice","some","App","mode","setMode","paramsSchema","setParamsSchema","demo","markdownParams","setMarkdownParams","undefined","markdownError","setMarkdownError","markdownUrl","setMarkdownUrl","markdownTemplate","setMarkdownTemplate","renderedMarkdown","setRenderedMarkdown","a","urlParams","URLSearchParams","window","location","search","get","gistUrl","contentUrl","startsWith","split","join","fetch","then","response","text","markdownContent","gistId","json","gist","html_url","checklist","files","fileName","Object","keys","find","name","endsWith","params","mutacheParams","parse","content","mustacheParamsNames","body","filter","k","type","flatMap","path","parts","schema","properties","options","paramName","fromUrlValue","default","JSON","stringify","loadData","template","compile","error","message","display","flexDirection","formData","onChange","TableOfContent","rel","value","cols","rows","paddingLeft","marginLeft","width","margin","print","remarkPlugins","slug","gfm","emoji","children","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.01beff83.chunk.js","sourcesContent":["import { waitForElementToBeRemoved } from \"@testing-library/react\";\nimport React from \"react\";\n\nconst Headings = ({ headings, activeId, setActiveId }) => (\n  <ul>\n    {headings.map((heading) => (\n      <li key={heading.id} className={heading.id === activeId ? \"active\" : \"\"}>\n        <a\n          href={`#${heading.id}`}\n          onClick={(e) => {\n            e.preventDefault();\n            setActiveId(heading.id);\n          }}\n        >\n          {heading.title}\n        </a>\n        {heading.items.length > 0 && (\n          <ul>\n            {heading.items.map((child) => (\n              <li\n                key={child.id}\n                className={child.id === activeId ? \"active\" : \"\"}\n              >\n                <a\n                  href={`#${child.id}`}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    setActiveId(child.id);\n                  }}\n                >\n                  {child.title}\n                </a>\n              </li>\n            ))}\n          </ul>\n        )}\n      </li>\n    ))}\n  </ul>\n);\n\n/**\n * Dynamically generates the table of contents list, using any H2s and H3s it can find in the main text\n */\nconst useHeadingsData = () => {\n  const [nestedHeadings, setNestedHeadings] = React.useState([]);\n\n  React.useEffect(() => {\n    const headingElements = Array.from(\n      document.querySelectorAll(\"body h1, body h2, body h3\")\n    );\n\n    // Created a list of headings, with H3s nested\n    const newNestedHeadings = getNestedHeadings(headingElements);\n    setNestedHeadings(newNestedHeadings);\n  }, []);\n\n  return { nestedHeadings };\n};\n\nconst getNestedHeadings = (headingElements) => {\n  const nestedHeadings = [];\n\n  const counters = { h1: 0, h2: 0, h3: 0 };\n\n  headingElements.forEach((heading, index) => {\n    const { innerText: title, id } = heading;\n\n    if (heading.nodeName === \"H1\") {\n      counters.h1 = counters.h1 + 1;\n      counters.h2 = 0;\n      counters.h3 = 0;\n      nestedHeadings.push({\n        id,\n        title: counters.h1 + \". \" + title,\n        items: [],\n      });\n    }\n\n    if (heading.nodeName === \"H2\" && nestedHeadings.length > 0) {\n      counters.h2 = counters.h2 + 1;\n      counters.h3 = 0;\n\n      nestedHeadings[nestedHeadings.length - 1].items.push({\n        id,\n        title: counters.h1 + \".\" + counters.h2 + \" \" + title,\n      });\n    }\n\n    if (heading.nodeName === \"H3\" && nestedHeadings.length > 0) {\n      counters.h3 = counters.h3 + 1;\n      nestedHeadings[nestedHeadings.length - 1].items.push({\n        id,\n        title:\n          counters.h1 + \".\" + counters.h2 + \".\" + counters.h3 + \" \" + title,\n      });\n    }\n  });\n\n  return nestedHeadings;\n};\n\nconst useIntersectionObserver = (setActiveId) => {\n  const headingElementsRef = React.useRef({});\n  React.useEffect(() => {\n    const headingElements = Array.from(document.querySelectorAll(\"h1, h2, h3\"));\n\n    headingElements.forEach((element) => {\n      element.addEventListener(\n        \"mouseover\",\n        function (event) {\n          setActiveId(event.target.id);\n        },\n        false\n      );\n    });\n  }, [setActiveId]);\n};\n\n/**\n * Renders the table of contents.\n */\nconst TableOfContents = () => {\n  const [activeId, setActiveId] = React.useState();\n  const { nestedHeadings } = useHeadingsData();\n  const setSmarterActiveIdWithScroll = (newActiveId) => {\n    const oldelement = document.getElementById(activeId);\n    if (oldelement) {\n      oldelement.style.color = \"\";\n      debugger\n    }\n    const element = document.getElementById(newActiveId);\n    element.style.color = \"orange\";\n    element.scrollIntoView({\n      behavior: \"smooth\",\n    });\n    setActiveId(newActiveId);\n  };\n\n  const setSmarterActiveId = (newActiveId) => {\n    const oldelement = document.getElementById(activeId);\n    if (oldelement) {\n      oldelement.style.color = \"\";\n    }\n    const element = document.getElementById(newActiveId);\n    element.style.color = \"orange\";  \n    setActiveId(newActiveId);\n  };  \n  useIntersectionObserver(setSmarterActiveId);\n\n  return (\n    <nav aria-label=\"Table of contents\">\n      <Headings\n        headings={nestedHeadings}\n        activeId={activeId}\n        setActiveId={setSmarterActiveIdWithScroll}\n      />\n    </nav>\n  );\n};\n\nexport default TableOfContents;\n","import \"./App.css\";\nimport Handlebars from \"handlebars\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\nimport emoji from \"remark-emoji\";\nimport slug from \"remark-slug\";\nimport headings from \"remark-autolink-headings\";\n\nimport { Fragment, useEffect, useState } from \"react\";\nimport JSONSchemaForm from \"@rjsf/core\";\nimport TableOfContents from \"./TableOfContent\";\nconst Form = JSONSchemaForm;\n\nHandlebars.registerHelper({\n  eq: (v1, v2) => v1 === v2,\n  ne: (v1, v2) => v1 !== v2,\n  lt: (v1, v2) => v1 < v2,\n  gt: (v1, v2) => v1 > v2,\n  lte: (v1, v2) => v1 <= v2,\n  gte: (v1, v2) => v1 >= v2,\n  and() {\n    return Array.prototype.every.call(arguments, Boolean);\n  },\n  or() {\n    return Array.prototype.slice.call(arguments, 0, -1).some(Boolean);\n  },\n});\n\nfunction App() {\n  const [mode, setMode] = useState(\"r\");\n  const [paramsSchema, setParamsSchema] = useState();\n  const [markdownParams, setMarkdownParams] = useState({ demo: \"Stéphan\" });\n\n  const [markdownError, setMarkdownError] = useState(undefined);\n  const [markdownUrl, setMarkdownUrl] = useState(undefined);\n  const [markdownTemplate, setMarkdownTemplate] = useState(\"{{demo}}\");\n  const [renderedMarkdown, setRenderedMarkdown] = useState(\"\");\n\n  useEffect(() => {\n    const loadData = async () => {\n      const urlParams = new URLSearchParams(window.location.search);\n      const markdownUrl = urlParams.get(\"markdown\");\n      const gistUrl =\n        urlParams.get(\"gist\") ||\n        \"https://gist.github.com/mestachs/e1819a776ca1618b981d1de082a550aa\";\n\n      setMode(urlParams.get(\"mode\") || \"r\");\n\n      if (markdownUrl) {\n        let contentUrl = markdownUrl;\n        if (markdownUrl.startsWith(\"https://github.com/\")) {\n          contentUrl =\n            \"https://raw.githubusercontent.com/\" +\n            markdownUrl.split(\"/\").slice(3, 5).join(\"/\") +\n            \"/\" +\n            markdownUrl.split(\"/\").slice(6).join(\"/\");\n        }\n        setMarkdownUrl(contentUrl);\n        const markdownContent = await fetch(contentUrl).then((response) =>\n          response.text()\n        );\n        setMarkdownTemplate(markdownContent);\n      } else if (gistUrl) {\n        let gistId = gistUrl;\n        if (\n          gistUrl.startsWith(\"https://gist.github.com\") ||\n          gistUrl.startsWith(\"https://gist.githubusercontent.com\")\n        ) {\n          gistId = gistUrl.split(\"/\")[4];\n        }\n\n        const gist = await fetch(`https://api.github.com/gists/${gistId}`).then(\n          (response) => response.json()\n        );\n        setMarkdownUrl(gist.html_url);\n\n        let checklist = gist.files[\"tasklist.md\"] || gist.files[\"checklist.md\"];\n\n        if (checklist == undefined) {\n          const fileName = Object.keys(gist.files).find((name) =>\n            name.endsWith(\".md\")\n          );\n          checklist = gist.files[fileName];\n        }\n\n        let params = gist.files[\"params.json\"];\n\n        if (params == undefined) {\n          const mutacheParams = Handlebars.parse(checklist.content);\n\n          const mustacheParamsNames = mutacheParams.body\n            .filter((k) => k.type == \"MustacheStatement\")\n            .flatMap((k) => k.path.parts);\n\n          const schema = {\n            type: \"object\",\n            properties: {},\n          };\n\n          const options = {};\n          for (let paramName of mustacheParamsNames) {\n            let fromUrlValue = urlParams.get(\"params.\" + paramName);\n            if (fromUrlValue) {\n              if (fromUrlValue && fromUrlValue == \"false\") {\n                fromUrlValue = false;\n              }\n              if (fromUrlValue && fromUrlValue == \"true\") {\n                fromUrlValue = true;\n              }\n              options[paramName] = fromUrlValue;\n            } else {\n              options[paramName] = \"exampleValue for \" + paramName;\n            }\n            schema.properties[paramName] = {\n              type: \"string\",\n              default: fromUrlValue,\n            };\n          }\n\n          setParamsSchema(schema);\n\n          params = {\n            content: JSON.stringify(options),\n          };\n        }\n\n        if (params) {\n          setMarkdownParams(JSON.parse(params.content));\n        }\n        setMarkdownTemplate(checklist.content);\n      }\n    };\n\n    loadData();\n  }, []);\n  useEffect(() => {\n    try {\n      const template = Handlebars.compile(markdownTemplate);\n      setRenderedMarkdown(template(markdownParams));\n      setMarkdownError(\"\");\n    } catch (error) {\n      setMarkdownError(error.message);\n    }\n  }, [markdownTemplate, JSON.stringify(markdownParams), markdownParams]);\n\n  return (\n    <div className=\"App\">\n      <div id=\"edit\" className=\"main\">\n        <div style={ mode ==\"rw\" ? { display: \"flex\", flexDirection: \"column\" } : {}}>\n          {paramsSchema && (\n            <Form\n              schema={paramsSchema}\n              formData={markdownParams}\n              onChange={(e) => setMarkdownParams(e.formData)}\n            >\n              <Fragment />\n            </Form>\n          )}\n          <TableOfContents key={renderedMarkdown} />\n        </div>\n        {mode == \"rw\" && (\n          <div className=\"noprint\">\n            <div>\n              <p>\n                <b>Markdown template</b>{\" \"}\n                {markdownUrl && (\n                  <a href={markdownUrl} target=\"_blank\" rel=\"noreferrer\">\n                    source\n                  </a>\n                )}\n                <span style={{ color: \"red\" }}>{markdownError}</span>\n              </p>\n              <textarea\n                value={markdownTemplate}\n                onChange={(event) => {\n                  setMarkdownTemplate(event.target.value);\n                }}\n                cols=\"120\"\n                rows=\"50\"\n              ></textarea>\n            </div>\n          </div>\n        )}\n        <div\n          style={{\n            paddingLeft: \"20px\",\n            marginLeft: \"20px\",\n            width: mode == \"r\" ? \"80%\" : \"\",\n            margin: mode == \"r\" ? \"auto\" : \"\",\n          }}\n        >\n          <p className=\"noprint\">\n            {mode == \"rw\" && <b>Preview</b>}\n            <button\n              style={{ marginLeft: \"20px\" }}\n              onClick={() => window.print()}\n            >\n              Print\n            </button>\n            <button\n              style={{ marginLeft: \"20px\" }}\n              onClick={() => setMode(mode == \"rw\" ? \"r\" : \"rw\")}\n            >\n              Toggle to {mode == \"rw\" ? \"r\" : \"rw\"}\n            </button>\n          </p>\n          <div className={\"checklist \" + mode}>\n            <ReactMarkdown\n              remarkPlugins={[slug, headings, gfm, emoji]}\n              children={renderedMarkdown}\n            />\n          </div>\n        </div>\n      </div>\n      {mode == \"rw\" && (\n        <div className=\"noprint\">\n          <p>\n            <b>\n              Instantiated markdown, create a{\" \"}\n              <a\n                href=\"https://gist.github.com/\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                gist\n              </a>{\" \"}\n              and start the procedure\n            </b>\n          </p>\n          <textarea value={renderedMarkdown} cols=\"200\" rows=\"50\"></textarea>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}